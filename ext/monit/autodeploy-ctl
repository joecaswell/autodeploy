#!/usr/bin/env bash

if [[ $(whoami) != 'root' ]]
then
  echo "[error] must be started as root user $(id)" 1>&2
  exit 1
fi

# ensure that /tmp/erl_pipes is set up correctly
erl_pipedir='/tmp/erl_pipes/'
mkdir -p "$erl_pipedir"
chown root:root "$erl_pipedir"
chmod 1777 "$erl_pipedir"

appname=autodeploy
appuser=autodeploy
appgroup=autodeploy

export HOME="/home/$appname"
# NB: autodeploy.sh sets RELX_OUTPUT_DIR to /home/autodeploy/autodeploy
apprel="$HOME/$appname/${appname}_release"

pidfile=/var/run/$appname.pid
logfile=/var/log/$appname/$appname.log

function now
{
  date '+%Y-%m-%d %H:%M:%S'
}

function pwarn
{
  echo "$(now) [warning]: $@" 1>&2 | tee -a "$logfile"
}

function perr
{
  echo "$(now) [error]: $@" 1>&2 | tee -a "$logfile"
}

function pinfo
{
  echo "$(now) [info]: $@" | tee -a "$logfile"
}

function errexit
{
  perr "$@"
  exit 1
}

function ensure_directories
{
  for dir in "$@"
  do
    if [[ ! -d $dir ]]
    then
      errexit "missing directory $dir"
    fi
  done
}

function ensure_files
{
  for file in "$@"
  do
    if [[ ! -f $file ]]
    then
      errexit "expected file at $file"
    fi
  done
}

function ensure_executables
{
  for exe in "$@"
  do
    if [[ ! -x $exe ]]
    then
      errexit "expected executable at $exe"
    fi
  done
}

ensure_directories "$HOME" "$apprel"

escript=/dev/null
for escript in $apprel/erts-*/bin/escript
do
  if [[ -x $escript ]]
  then
    break
  fi
done

nodetool="$apprel/bin/nodetool"
appctl="$apprel/bin/${appname}_release"

ensure_files "$nodetool"
ensure_executables "$escript" "$appctl"

cd $HOME || errexit "could not cd to $HOME"

# NB: file in this form:
# export SECRET_zendesk_sms='THESECRET'
# export SECRET_other_app='THESECRET'
secrets_file="$HOME/.${appname}_secrets"

if [[ -s $secrets_file ]]
then
    source $secrets_file
else
  pinfo "no secrets file at $secrets_file" 1>&2
fi

case $1 in
  start)
    pinfo "starting $appname $(date)" > $logfile 2>&1
    su -c "$appctl start" $appuser >> $logfile 2>&1
    app_pid=$("$escript" "$nodetool" -name $appname@127.0.0.1 -setcookie $appname rpcterms os getpid | sed -e's/"//g')
    echo $app_pid > $pidfile
    exit 0
    ;;

  stop)
    pinfo "stopping $appname $(date)" >> $logfile 2>&1
    su -c "$appctl stop" $appuser >> $logfile 2>&1
    rm -f $pidfile
    exit 0
    ;;

  *)
    echo "Usage: $appname-ctl {start|stop}"
    exit 1
    ;;
esac

